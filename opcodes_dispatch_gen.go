// Code generated by tools/gen_opcodes_dispatch.go; DO NOT EDIT.
package main

var opcodeFuncs = map[uint16]func(*CPU, *Instruction) int{
	0x00:               OpNop,         // NOP
	0x01:               OpLdBCN16,     // LD BC, n16
	0x02:               OpLdMemBCA,    // LD (BC), A
	0x03:               OpIncBC,       // INC BC
	0x04:               OpIncB,        // INC B
	0x05:               OpDecB,        // DEC B
	0x06:               OpLdBN8,       // LD B, n8
	0x07:               OpRlca,        // RLCA
	0x08:               OpLdMemA16SP,  // LD (a16), SP
	0x09:               OpAddHLBC,     // ADD HL, BC
	0x0A:               OpLdAMemBC,    // LD A, (BC)
	0x0B:               OpDecBC,       // DEC BC
	0x0C:               OpIncC,        // INC C
	0x0D:               OpDecC,        // DEC C
	0x0E:               OpLdCN8,       // LD C, n8
	0x0F:               OpRrca,        // RRCA
	0x10:               OpStopN8,      // STOP n8
	0x11:               OpLdDEN16,     // LD DE, n16
	0x12:               OpLdMemDEA,    // LD (DE), A
	0x13:               OpIncDE,       // INC DE
	0x14:               OpIncD,        // INC D
	0x15:               OpDecD,        // DEC D
	0x16:               OpLdDN8,       // LD D, n8
	0x17:               OpRla,         // RLA
	0x18:               OpJrE8,        // JR e8
	0x19:               OpAddHLDE,     // ADD HL, DE
	0x1A:               OpLdAMemDE,    // LD A, (DE)
	0x1B:               OpDecDE,       // DEC DE
	0x1C:               OpIncE,        // INC E
	0x1D:               OpDecE,        // DEC E
	0x1E:               OpLdEN8,       // LD E, n8
	0x1F:               OpRra,         // RRA
	0x20:               OpJrNZE8,      // JR NZ, e8
	0x21:               OpLdHLN16,     // LD HL, n16
	0x22:               OpLdMemHLIncA, // LD (HL++), A
	0x23:               OpIncHL,       // INC HL
	0x24:               OpIncH,        // INC H
	0x25:               OpDecH,        // DEC H
	0x26:               OpLdHN8,       // LD H, n8
	0x27:               OpDaa,         // DAA
	0x28:               OpJrZE8,       // JR Z, e8
	0x29:               OpAddHLHL,     // ADD HL, HL
	0x2A:               OpLdAMemHLInc, // LD A, (HL++)
	0x2B:               OpDecHL,       // DEC HL
	0x2C:               OpIncL,        // INC L
	0x2D:               OpDecL,        // DEC L
	0x2E:               OpLdLN8,       // LD L, n8
	0x2F:               OpCpl,         // CPL
	0x30:               OpJrNCE8,      // JR NC, e8
	0x31:               OpLdSPN16,     // LD SP, n16
	0x32:               OpLdMemHLDecA, // LD (HL--), A
	0x33:               OpIncSP,       // INC SP
	0x34:               OpIncMemHL,    // INC (HL)
	0x35:               OpDecMemHL,    // DEC (HL)
	0x36:               OpLdMemHLN8,   // LD (HL), n8
	0x37:               OpScf,         // SCF
	0x38:               OpJrCE8,       // JR C, e8
	0x39:               OpAddHLSP,     // ADD HL, SP
	0x3A:               OpLdAMemHLDec, // LD A, (HL--)
	0x3B:               OpDecSP,       // DEC SP
	0x3C:               OpIncA,        // INC A
	0x3D:               OpDecA,        // DEC A
	0x3E:               OpLdAN8,       // LD A, n8
	0x3F:               OpCcf,         // CCF
	0x40:               OpLdBB,        // LD B, B
	0x41:               OpLdBC,        // LD B, C
	0x42:               OpLdBD,        // LD B, D
	0x43:               OpLdBE,        // LD B, E
	0x44:               OpLdBH,        // LD B, H
	0x45:               OpLdBL,        // LD B, L
	0x46:               OpLdBMemHL,    // LD B, (HL)
	0x47:               OpLdBA,        // LD B, A
	0x48:               OpLdCB,        // LD C, B
	0x49:               OpLdCC,        // LD C, C
	0x4A:               OpLdCD,        // LD C, D
	0x4B:               OpLdCE,        // LD C, E
	0x4C:               OpLdCH,        // LD C, H
	0x4D:               OpLdCL,        // LD C, L
	0x4E:               OpLdCMemHL,    // LD C, (HL)
	0x4F:               OpLdCA,        // LD C, A
	0x50:               OpLdDB,        // LD D, B
	0x51:               OpLdDC,        // LD D, C
	0x52:               OpLdDD,        // LD D, D
	0x53:               OpLdDE,        // LD D, E
	0x54:               OpLdDH,        // LD D, H
	0x55:               OpLdDL,        // LD D, L
	0x56:               OpLdDMemHL,    // LD D, (HL)
	0x57:               OpLdDA,        // LD D, A
	0x58:               OpLdEB,        // LD E, B
	0x59:               OpLdEC,        // LD E, C
	0x5A:               OpLdED,        // LD E, D
	0x5B:               OpLdEE,        // LD E, E
	0x5C:               OpLdEH,        // LD E, H
	0x5D:               OpLdEL,        // LD E, L
	0x5E:               OpLdEMemHL,    // LD E, (HL)
	0x5F:               OpLdEA,        // LD E, A
	0x60:               OpLdHB,        // LD H, B
	0x61:               OpLdHC,        // LD H, C
	0x62:               OpLdHD,        // LD H, D
	0x63:               OpLdHE,        // LD H, E
	0x64:               OpLdHH,        // LD H, H
	0x65:               OpLdHL,        // LD H, L
	0x66:               OpLdHMemHL,    // LD H, (HL)
	0x67:               OpLdHA,        // LD H, A
	0x68:               OpLdLB,        // LD L, B
	0x69:               OpLdLC,        // LD L, C
	0x6A:               OpLdLD,        // LD L, D
	0x6B:               OpLdLE,        // LD L, E
	0x6C:               OpLdLH,        // LD L, H
	0x6D:               OpLdLL,        // LD L, L
	0x6E:               OpLdLMemHL,    // LD L, (HL)
	0x6F:               OpLdLA,        // LD L, A
	0x70:               OpLdMemHLB,    // LD (HL), B
	0x71:               OpLdMemHLC,    // LD (HL), C
	0x72:               OpLdMemHLD,    // LD (HL), D
	0x73:               OpLdMemHLE,    // LD (HL), E
	0x74:               OpLdMemHLH,    // LD (HL), H
	0x75:               OpLdMemHLL,    // LD (HL), L
	0x76:               OpHalt,        // HALT
	0x77:               OpLdMemHLA,    // LD (HL), A
	0x78:               OpLdAB,        // LD A, B
	0x79:               OpLdAC,        // LD A, C
	0x7A:               OpLdAD,        // LD A, D
	0x7B:               OpLdAE,        // LD A, E
	0x7C:               OpLdAH,        // LD A, H
	0x7D:               OpLdAL,        // LD A, L
	0x7E:               OpLdAMemHL,    // LD A, (HL)
	0x7F:               OpLdAA,        // LD A, A
	0x80:               OpAddAB,       // ADD A, B
	0x81:               OpAddAC,       // ADD A, C
	0x82:               OpAddAD,       // ADD A, D
	0x83:               OpAddAE,       // ADD A, E
	0x84:               OpAddAH,       // ADD A, H
	0x85:               OpAddAL,       // ADD A, L
	0x86:               OpAddAMemHL,   // ADD A, (HL)
	0x87:               OpAddAA,       // ADD A, A
	0x88:               OpAdcAB,       // ADC A, B
	0x89:               OpAdcAC,       // ADC A, C
	0x8A:               OpAdcAD,       // ADC A, D
	0x8B:               OpAdcAE,       // ADC A, E
	0x8C:               OpAdcAH,       // ADC A, H
	0x8D:               OpAdcAL,       // ADC A, L
	0x8E:               OpAdcAMemHL,   // ADC A, (HL)
	0x8F:               OpAdcAA,       // ADC A, A
	0x90:               OpSubAB,       // SUB A, B
	0x91:               OpSubAC,       // SUB A, C
	0x92:               OpSubAD,       // SUB A, D
	0x93:               OpSubAE,       // SUB A, E
	0x94:               OpSubAH,       // SUB A, H
	0x95:               OpSubAL,       // SUB A, L
	0x96:               OpSubAMemHL,   // SUB A, (HL)
	0x97:               OpSubAA,       // SUB A, A
	0x98:               OpSbcAB,       // SBC A, B
	0x99:               OpSbcAC,       // SBC A, C
	0x9A:               OpSbcAD,       // SBC A, D
	0x9B:               OpSbcAE,       // SBC A, E
	0x9C:               OpSbcAH,       // SBC A, H
	0x9D:               OpSbcAL,       // SBC A, L
	0x9E:               OpSbcAMemHL,   // SBC A, (HL)
	0x9F:               OpSbcAA,       // SBC A, A
	0xA0:               OpAndAB,       // AND A, B
	0xA1:               OpAndAC,       // AND A, C
	0xA2:               OpAndAD,       // AND A, D
	0xA3:               OpAndAE,       // AND A, E
	0xA4:               OpAndAH,       // AND A, H
	0xA5:               OpAndAL,       // AND A, L
	0xA6:               OpAndAMemHL,   // AND A, (HL)
	0xA7:               OpAndAA,       // AND A, A
	0xA8:               OpXorAB,       // XOR A, B
	0xA9:               OpXorAC,       // XOR A, C
	0xAA:               OpXorAD,       // XOR A, D
	0xAB:               OpXorAE,       // XOR A, E
	0xAC:               OpXorAH,       // XOR A, H
	0xAD:               OpXorAL,       // XOR A, L
	0xAE:               OpXorAMemHL,   // XOR A, (HL)
	0xAF:               OpXorAA,       // XOR A, A
	0xB0:               OpOrAB,        // OR A, B
	0xB1:               OpOrAC,        // OR A, C
	0xB2:               OpOrAD,        // OR A, D
	0xB3:               OpOrAE,        // OR A, E
	0xB4:               OpOrAH,        // OR A, H
	0xB5:               OpOrAL,        // OR A, L
	0xB6:               OpOrAMemHL,    // OR A, (HL)
	0xB7:               OpOrAA,        // OR A, A
	0xB8:               OpCpAB,        // CP A, B
	0xB9:               OpCpAC,        // CP A, C
	0xBA:               OpCpAD,        // CP A, D
	0xBB:               OpCpAE,        // CP A, E
	0xBC:               OpCpAH,        // CP A, H
	0xBD:               OpCpAL,        // CP A, L
	0xBE:               OpCpAMemHL,    // CP A, (HL)
	0xBF:               OpCpAA,        // CP A, A
	0xC0:               OpRetNZ,       // RET NZ
	0xC1:               OpPopBC,       // POP BC
	0xC2:               OpJpNZA16,     // JP NZ, a16
	0xC3:               OpJpA16,       // JP a16
	0xC4:               OpCallNZA16,   // CALL NZ, a16
	0xC5:               OpPushBC,      // PUSH BC
	0xC6:               OpAddAN8,      // ADD A, n8
	0xC7:               OpRstRST00,    // RST $00
	0xC8:               OpRetZ,        // RET Z
	0xC9:               OpRet,         // RET
	0xCA:               OpJpZA16,      // JP Z, a16
	0xCB:               OpPrefix,      // PREFIX
	0xCC:               OpCallZA16,    // CALL Z, a16
	0xCD:               OpCallA16,     // CALL a16
	0xCE:               OpAdcAN8,      // ADC A, n8
	0xCF:               OpRstRST08,    // RST $08
	0xD0:               OpRetNC,       // RET NC
	0xD1:               OpPopDE,       // POP DE
	0xD2:               OpJpNCA16,     // JP NC, a16
	0xD4:               OpCallNCA16,   // CALL NC, a16
	0xD5:               OpPushDE,      // PUSH DE
	0xD6:               OpSubAN8,      // SUB A, n8
	0xD7:               OpRstRST10,    // RST $10
	0xD8:               OpRetC,        // RET C
	0xD9:               OpReti,        // RETI
	0xDA:               OpJpCA16,      // JP C, a16
	0xDC:               OpCallCA16,    // CALL C, a16
	0xDE:               OpSbcAN8,      // SBC A, n8
	0xDF:               OpRstRST18,    // RST $18
	0xE0:               OpLdhMemA8A,   // LDH (a8), A
	0xE1:               OpPopHL,       // POP HL
	0xE2:               OpLdhMemCA,    // LDH (C), A
	0xE5:               OpPushHL,      // PUSH HL
	0xE6:               OpAndAN8,      // AND A, n8
	0xE7:               OpRstRST20,    // RST $20
	0xE8:               OpAddSPE8,     // ADD SP, e8
	0xE9:               OpJpHL,        // JP HL
	0xEA:               OpLdMemA16A,   // LD (a16), A
	0xEE:               OpXorAN8,      // XOR A, n8
	0xEF:               OpRstRST28,    // RST $28
	0xF0:               OpLdhAMemA8,   // LDH A, (a8)
	0xF1:               OpPopAF,       // POP AF
	0xF2:               OpLdhAMemC,    // LDH A, (C)
	0xF3:               OpDi,          // DI
	0xF5:               OpPushAF,      // PUSH AF
	0xF6:               OpOrAN8,       // OR A, n8
	0xF7:               OpRstRST30,    // RST $30
	0xF8:               OpLdHLSPIncE8, // LD HL, SP++, e8
	0xF9:               OpLdSPHL,      // LD SP, HL
	0xFA:               OpLdAMemA16,   // LD A, (a16)
	0xFB:               OpEi,          // EI
	0xFE:               OpCpAN8,       // CP A, n8
	0xFF:               OpRstRST38,    // RST $38
	256 /* CB 0x00 */ : OpCbRlcB,      // RLC B
	257 /* CB 0x01 */ : OpCbRlcC,      // RLC C
	258 /* CB 0x02 */ : OpCbRlcD,      // RLC D
	259 /* CB 0x03 */ : OpCbRlcE,      // RLC E
	260 /* CB 0x04 */ : OpCbRlcH,      // RLC H
	261 /* CB 0x05 */ : OpCbRlcL,      // RLC L
	262 /* CB 0x06 */ : OpCbRlcMemHL,  // RLC (HL)
	263 /* CB 0x07 */ : OpCbRlcA,      // RLC A
	264 /* CB 0x08 */ : OpCbRrcB,      // RRC B
	265 /* CB 0x09 */ : OpCbRrcC,      // RRC C
	266 /* CB 0x0A */ : OpCbRrcD,      // RRC D
	267 /* CB 0x0B */ : OpCbRrcE,      // RRC E
	268 /* CB 0x0C */ : OpCbRrcH,      // RRC H
	269 /* CB 0x0D */ : OpCbRrcL,      // RRC L
	270 /* CB 0x0E */ : OpCbRrcMemHL,  // RRC (HL)
	271 /* CB 0x0F */ : OpCbRrcA,      // RRC A
	272 /* CB 0x10 */ : OpCbRlB,       // RL B
	273 /* CB 0x11 */ : OpCbRlC,       // RL C
	274 /* CB 0x12 */ : OpCbRlD,       // RL D
	275 /* CB 0x13 */ : OpCbRlE,       // RL E
	276 /* CB 0x14 */ : OpCbRlH,       // RL H
	277 /* CB 0x15 */ : OpCbRlL,       // RL L
	278 /* CB 0x16 */ : OpCbRlMemHL,   // RL (HL)
	279 /* CB 0x17 */ : OpCbRlA,       // RL A
	280 /* CB 0x18 */ : OpCbRrB,       // RR B
	281 /* CB 0x19 */ : OpCbRrC,       // RR C
	282 /* CB 0x1A */ : OpCbRrD,       // RR D
	283 /* CB 0x1B */ : OpCbRrE,       // RR E
	284 /* CB 0x1C */ : OpCbRrH,       // RR H
	285 /* CB 0x1D */ : OpCbRrL,       // RR L
	286 /* CB 0x1E */ : OpCbRrMemHL,   // RR (HL)
	287 /* CB 0x1F */ : OpCbRrA,       // RR A
	288 /* CB 0x20 */ : OpCbSlaB,      // SLA B
	289 /* CB 0x21 */ : OpCbSlaC,      // SLA C
	290 /* CB 0x22 */ : OpCbSlaD,      // SLA D
	291 /* CB 0x23 */ : OpCbSlaE,      // SLA E
	292 /* CB 0x24 */ : OpCbSlaH,      // SLA H
	293 /* CB 0x25 */ : OpCbSlaL,      // SLA L
	294 /* CB 0x26 */ : OpCbSlaMemHL,  // SLA (HL)
	295 /* CB 0x27 */ : OpCbSlaA,      // SLA A
	296 /* CB 0x28 */ : OpCbSraB,      // SRA B
	297 /* CB 0x29 */ : OpCbSraC,      // SRA C
	298 /* CB 0x2A */ : OpCbSraD,      // SRA D
	299 /* CB 0x2B */ : OpCbSraE,      // SRA E
	300 /* CB 0x2C */ : OpCbSraH,      // SRA H
	301 /* CB 0x2D */ : OpCbSraL,      // SRA L
	302 /* CB 0x2E */ : OpCbSraMemHL,  // SRA (HL)
	303 /* CB 0x2F */ : OpCbSraA,      // SRA A
	304 /* CB 0x30 */ : OpCbSwapB,     // SWAP B
	305 /* CB 0x31 */ : OpCbSwapC,     // SWAP C
	306 /* CB 0x32 */ : OpCbSwapD,     // SWAP D
	307 /* CB 0x33 */ : OpCbSwapE,     // SWAP E
	308 /* CB 0x34 */ : OpCbSwapH,     // SWAP H
	309 /* CB 0x35 */ : OpCbSwapL,     // SWAP L
	310 /* CB 0x36 */ : OpCbSwapMemHL, // SWAP (HL)
	311 /* CB 0x37 */ : OpCbSwapA,     // SWAP A
	312 /* CB 0x38 */ : OpCbSrlB,      // SRL B
	313 /* CB 0x39 */ : OpCbSrlC,      // SRL C
	314 /* CB 0x3A */ : OpCbSrlD,      // SRL D
	315 /* CB 0x3B */ : OpCbSrlE,      // SRL E
	316 /* CB 0x3C */ : OpCbSrlH,      // SRL H
	317 /* CB 0x3D */ : OpCbSrlL,      // SRL L
	318 /* CB 0x3E */ : OpCbSrlMemHL,  // SRL (HL)
	319 /* CB 0x3F */ : OpCbSrlA,      // SRL A
	320 /* CB 0x40 */ : OpCbBit0B,     // BIT 0, B
	321 /* CB 0x41 */ : OpCbBit0C,     // BIT 0, C
	322 /* CB 0x42 */ : OpCbBit0D,     // BIT 0, D
	323 /* CB 0x43 */ : OpCbBit0E,     // BIT 0, E
	324 /* CB 0x44 */ : OpCbBit0H,     // BIT 0, H
	325 /* CB 0x45 */ : OpCbBit0L,     // BIT 0, L
	326 /* CB 0x46 */ : OpCbBit0MemHL, // BIT 0, (HL)
	327 /* CB 0x47 */ : OpCbBit0A,     // BIT 0, A
	328 /* CB 0x48 */ : OpCbBit1B,     // BIT 1, B
	329 /* CB 0x49 */ : OpCbBit1C,     // BIT 1, C
	330 /* CB 0x4A */ : OpCbBit1D,     // BIT 1, D
	331 /* CB 0x4B */ : OpCbBit1E,     // BIT 1, E
	332 /* CB 0x4C */ : OpCbBit1H,     // BIT 1, H
	333 /* CB 0x4D */ : OpCbBit1L,     // BIT 1, L
	334 /* CB 0x4E */ : OpCbBit1MemHL, // BIT 1, (HL)
	335 /* CB 0x4F */ : OpCbBit1A,     // BIT 1, A
	336 /* CB 0x50 */ : OpCbBit2B,     // BIT 2, B
	337 /* CB 0x51 */ : OpCbBit2C,     // BIT 2, C
	338 /* CB 0x52 */ : OpCbBit2D,     // BIT 2, D
	339 /* CB 0x53 */ : OpCbBit2E,     // BIT 2, E
	340 /* CB 0x54 */ : OpCbBit2H,     // BIT 2, H
	341 /* CB 0x55 */ : OpCbBit2L,     // BIT 2, L
	342 /* CB 0x56 */ : OpCbBit2MemHL, // BIT 2, (HL)
	343 /* CB 0x57 */ : OpCbBit2A,     // BIT 2, A
	344 /* CB 0x58 */ : OpCbBit3B,     // BIT 3, B
	345 /* CB 0x59 */ : OpCbBit3C,     // BIT 3, C
	346 /* CB 0x5A */ : OpCbBit3D,     // BIT 3, D
	347 /* CB 0x5B */ : OpCbBit3E,     // BIT 3, E
	348 /* CB 0x5C */ : OpCbBit3H,     // BIT 3, H
	349 /* CB 0x5D */ : OpCbBit3L,     // BIT 3, L
	350 /* CB 0x5E */ : OpCbBit3MemHL, // BIT 3, (HL)
	351 /* CB 0x5F */ : OpCbBit3A,     // BIT 3, A
	352 /* CB 0x60 */ : OpCbBit4B,     // BIT 4, B
	353 /* CB 0x61 */ : OpCbBit4C,     // BIT 4, C
	354 /* CB 0x62 */ : OpCbBit4D,     // BIT 4, D
	355 /* CB 0x63 */ : OpCbBit4E,     // BIT 4, E
	356 /* CB 0x64 */ : OpCbBit4H,     // BIT 4, H
	357 /* CB 0x65 */ : OpCbBit4L,     // BIT 4, L
	358 /* CB 0x66 */ : OpCbBit4MemHL, // BIT 4, (HL)
	359 /* CB 0x67 */ : OpCbBit4A,     // BIT 4, A
	360 /* CB 0x68 */ : OpCbBit5B,     // BIT 5, B
	361 /* CB 0x69 */ : OpCbBit5C,     // BIT 5, C
	362 /* CB 0x6A */ : OpCbBit5D,     // BIT 5, D
	363 /* CB 0x6B */ : OpCbBit5E,     // BIT 5, E
	364 /* CB 0x6C */ : OpCbBit5H,     // BIT 5, H
	365 /* CB 0x6D */ : OpCbBit5L,     // BIT 5, L
	366 /* CB 0x6E */ : OpCbBit5MemHL, // BIT 5, (HL)
	367 /* CB 0x6F */ : OpCbBit5A,     // BIT 5, A
	368 /* CB 0x70 */ : OpCbBit6B,     // BIT 6, B
	369 /* CB 0x71 */ : OpCbBit6C,     // BIT 6, C
	370 /* CB 0x72 */ : OpCbBit6D,     // BIT 6, D
	371 /* CB 0x73 */ : OpCbBit6E,     // BIT 6, E
	372 /* CB 0x74 */ : OpCbBit6H,     // BIT 6, H
	373 /* CB 0x75 */ : OpCbBit6L,     // BIT 6, L
	374 /* CB 0x76 */ : OpCbBit6MemHL, // BIT 6, (HL)
	375 /* CB 0x77 */ : OpCbBit6A,     // BIT 6, A
	376 /* CB 0x78 */ : OpCbBit7B,     // BIT 7, B
	377 /* CB 0x79 */ : OpCbBit7C,     // BIT 7, C
	378 /* CB 0x7A */ : OpCbBit7D,     // BIT 7, D
	379 /* CB 0x7B */ : OpCbBit7E,     // BIT 7, E
	380 /* CB 0x7C */ : OpCbBit7H,     // BIT 7, H
	381 /* CB 0x7D */ : OpCbBit7L,     // BIT 7, L
	382 /* CB 0x7E */ : OpCbBit7MemHL, // BIT 7, (HL)
	383 /* CB 0x7F */ : OpCbBit7A,     // BIT 7, A
	384 /* CB 0x80 */ : OpCbRes0B,     // RES 0, B
	385 /* CB 0x81 */ : OpCbRes0C,     // RES 0, C
	386 /* CB 0x82 */ : OpCbRes0D,     // RES 0, D
	387 /* CB 0x83 */ : OpCbRes0E,     // RES 0, E
	388 /* CB 0x84 */ : OpCbRes0H,     // RES 0, H
	389 /* CB 0x85 */ : OpCbRes0L,     // RES 0, L
	390 /* CB 0x86 */ : OpCbRes0MemHL, // RES 0, (HL)
	391 /* CB 0x87 */ : OpCbRes0A,     // RES 0, A
	392 /* CB 0x88 */ : OpCbRes1B,     // RES 1, B
	393 /* CB 0x89 */ : OpCbRes1C,     // RES 1, C
	394 /* CB 0x8A */ : OpCbRes1D,     // RES 1, D
	395 /* CB 0x8B */ : OpCbRes1E,     // RES 1, E
	396 /* CB 0x8C */ : OpCbRes1H,     // RES 1, H
	397 /* CB 0x8D */ : OpCbRes1L,     // RES 1, L
	398 /* CB 0x8E */ : OpCbRes1MemHL, // RES 1, (HL)
	399 /* CB 0x8F */ : OpCbRes1A,     // RES 1, A
	400 /* CB 0x90 */ : OpCbRes2B,     // RES 2, B
	401 /* CB 0x91 */ : OpCbRes2C,     // RES 2, C
	402 /* CB 0x92 */ : OpCbRes2D,     // RES 2, D
	403 /* CB 0x93 */ : OpCbRes2E,     // RES 2, E
	404 /* CB 0x94 */ : OpCbRes2H,     // RES 2, H
	405 /* CB 0x95 */ : OpCbRes2L,     // RES 2, L
	406 /* CB 0x96 */ : OpCbRes2MemHL, // RES 2, (HL)
	407 /* CB 0x97 */ : OpCbRes2A,     // RES 2, A
	408 /* CB 0x98 */ : OpCbRes3B,     // RES 3, B
	409 /* CB 0x99 */ : OpCbRes3C,     // RES 3, C
	410 /* CB 0x9A */ : OpCbRes3D,     // RES 3, D
	411 /* CB 0x9B */ : OpCbRes3E,     // RES 3, E
	412 /* CB 0x9C */ : OpCbRes3H,     // RES 3, H
	413 /* CB 0x9D */ : OpCbRes3L,     // RES 3, L
	414 /* CB 0x9E */ : OpCbRes3MemHL, // RES 3, (HL)
	415 /* CB 0x9F */ : OpCbRes3A,     // RES 3, A
	416 /* CB 0xA0 */ : OpCbRes4B,     // RES 4, B
	417 /* CB 0xA1 */ : OpCbRes4C,     // RES 4, C
	418 /* CB 0xA2 */ : OpCbRes4D,     // RES 4, D
	419 /* CB 0xA3 */ : OpCbRes4E,     // RES 4, E
	420 /* CB 0xA4 */ : OpCbRes4H,     // RES 4, H
	421 /* CB 0xA5 */ : OpCbRes4L,     // RES 4, L
	422 /* CB 0xA6 */ : OpCbRes4MemHL, // RES 4, (HL)
	423 /* CB 0xA7 */ : OpCbRes4A,     // RES 4, A
	424 /* CB 0xA8 */ : OpCbRes5B,     // RES 5, B
	425 /* CB 0xA9 */ : OpCbRes5C,     // RES 5, C
	426 /* CB 0xAA */ : OpCbRes5D,     // RES 5, D
	427 /* CB 0xAB */ : OpCbRes5E,     // RES 5, E
	428 /* CB 0xAC */ : OpCbRes5H,     // RES 5, H
	429 /* CB 0xAD */ : OpCbRes5L,     // RES 5, L
	430 /* CB 0xAE */ : OpCbRes5MemHL, // RES 5, (HL)
	431 /* CB 0xAF */ : OpCbRes5A,     // RES 5, A
	432 /* CB 0xB0 */ : OpCbRes6B,     // RES 6, B
	433 /* CB 0xB1 */ : OpCbRes6C,     // RES 6, C
	434 /* CB 0xB2 */ : OpCbRes6D,     // RES 6, D
	435 /* CB 0xB3 */ : OpCbRes6E,     // RES 6, E
	436 /* CB 0xB4 */ : OpCbRes6H,     // RES 6, H
	437 /* CB 0xB5 */ : OpCbRes6L,     // RES 6, L
	438 /* CB 0xB6 */ : OpCbRes6MemHL, // RES 6, (HL)
	439 /* CB 0xB7 */ : OpCbRes6A,     // RES 6, A
	440 /* CB 0xB8 */ : OpCbRes7B,     // RES 7, B
	441 /* CB 0xB9 */ : OpCbRes7C,     // RES 7, C
	442 /* CB 0xBA */ : OpCbRes7D,     // RES 7, D
	443 /* CB 0xBB */ : OpCbRes7E,     // RES 7, E
	444 /* CB 0xBC */ : OpCbRes7H,     // RES 7, H
	445 /* CB 0xBD */ : OpCbRes7L,     // RES 7, L
	446 /* CB 0xBE */ : OpCbRes7MemHL, // RES 7, (HL)
	447 /* CB 0xBF */ : OpCbRes7A,     // RES 7, A
	448 /* CB 0xC0 */ : OpCbSet0B,     // SET 0, B
	449 /* CB 0xC1 */ : OpCbSet0C,     // SET 0, C
	450 /* CB 0xC2 */ : OpCbSet0D,     // SET 0, D
	451 /* CB 0xC3 */ : OpCbSet0E,     // SET 0, E
	452 /* CB 0xC4 */ : OpCbSet0H,     // SET 0, H
	453 /* CB 0xC5 */ : OpCbSet0L,     // SET 0, L
	454 /* CB 0xC6 */ : OpCbSet0MemHL, // SET 0, (HL)
	455 /* CB 0xC7 */ : OpCbSet0A,     // SET 0, A
	456 /* CB 0xC8 */ : OpCbSet1B,     // SET 1, B
	457 /* CB 0xC9 */ : OpCbSet1C,     // SET 1, C
	458 /* CB 0xCA */ : OpCbSet1D,     // SET 1, D
	459 /* CB 0xCB */ : OpCbSet1E,     // SET 1, E
	460 /* CB 0xCC */ : OpCbSet1H,     // SET 1, H
	461 /* CB 0xCD */ : OpCbSet1L,     // SET 1, L
	462 /* CB 0xCE */ : OpCbSet1MemHL, // SET 1, (HL)
	463 /* CB 0xCF */ : OpCbSet1A,     // SET 1, A
	464 /* CB 0xD0 */ : OpCbSet2B,     // SET 2, B
	465 /* CB 0xD1 */ : OpCbSet2C,     // SET 2, C
	466 /* CB 0xD2 */ : OpCbSet2D,     // SET 2, D
	467 /* CB 0xD3 */ : OpCbSet2E,     // SET 2, E
	468 /* CB 0xD4 */ : OpCbSet2H,     // SET 2, H
	469 /* CB 0xD5 */ : OpCbSet2L,     // SET 2, L
	470 /* CB 0xD6 */ : OpCbSet2MemHL, // SET 2, (HL)
	471 /* CB 0xD7 */ : OpCbSet2A,     // SET 2, A
	472 /* CB 0xD8 */ : OpCbSet3B,     // SET 3, B
	473 /* CB 0xD9 */ : OpCbSet3C,     // SET 3, C
	474 /* CB 0xDA */ : OpCbSet3D,     // SET 3, D
	475 /* CB 0xDB */ : OpCbSet3E,     // SET 3, E
	476 /* CB 0xDC */ : OpCbSet3H,     // SET 3, H
	477 /* CB 0xDD */ : OpCbSet3L,     // SET 3, L
	478 /* CB 0xDE */ : OpCbSet3MemHL, // SET 3, (HL)
	479 /* CB 0xDF */ : OpCbSet3A,     // SET 3, A
	480 /* CB 0xE0 */ : OpCbSet4B,     // SET 4, B
	481 /* CB 0xE1 */ : OpCbSet4C,     // SET 4, C
	482 /* CB 0xE2 */ : OpCbSet4D,     // SET 4, D
	483 /* CB 0xE3 */ : OpCbSet4E,     // SET 4, E
	484 /* CB 0xE4 */ : OpCbSet4H,     // SET 4, H
	485 /* CB 0xE5 */ : OpCbSet4L,     // SET 4, L
	486 /* CB 0xE6 */ : OpCbSet4MemHL, // SET 4, (HL)
	487 /* CB 0xE7 */ : OpCbSet4A,     // SET 4, A
	488 /* CB 0xE8 */ : OpCbSet5B,     // SET 5, B
	489 /* CB 0xE9 */ : OpCbSet5C,     // SET 5, C
	490 /* CB 0xEA */ : OpCbSet5D,     // SET 5, D
	491 /* CB 0xEB */ : OpCbSet5E,     // SET 5, E
	492 /* CB 0xEC */ : OpCbSet5H,     // SET 5, H
	493 /* CB 0xED */ : OpCbSet5L,     // SET 5, L
	494 /* CB 0xEE */ : OpCbSet5MemHL, // SET 5, (HL)
	495 /* CB 0xEF */ : OpCbSet5A,     // SET 5, A
	496 /* CB 0xF0 */ : OpCbSet6B,     // SET 6, B
	497 /* CB 0xF1 */ : OpCbSet6C,     // SET 6, C
	498 /* CB 0xF2 */ : OpCbSet6D,     // SET 6, D
	499 /* CB 0xF3 */ : OpCbSet6E,     // SET 6, E
	500 /* CB 0xF4 */ : OpCbSet6H,     // SET 6, H
	501 /* CB 0xF5 */ : OpCbSet6L,     // SET 6, L
	502 /* CB 0xF6 */ : OpCbSet6MemHL, // SET 6, (HL)
	503 /* CB 0xF7 */ : OpCbSet6A,     // SET 6, A
	504 /* CB 0xF8 */ : OpCbSet7B,     // SET 7, B
	505 /* CB 0xF9 */ : OpCbSet7C,     // SET 7, C
	506 /* CB 0xFA */ : OpCbSet7D,     // SET 7, D
	507 /* CB 0xFB */ : OpCbSet7E,     // SET 7, E
	508 /* CB 0xFC */ : OpCbSet7H,     // SET 7, H
	509 /* CB 0xFD */ : OpCbSet7L,     // SET 7, L
	510 /* CB 0xFE */ : OpCbSet7MemHL, // SET 7, (HL)
	511 /* CB 0xFF */ : OpCbSet7A,     // SET 7, A
}
